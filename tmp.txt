---
import PlotFigure from "../components/PlotFigure.astro";
import Layout from "../layouts/Layout.astro";
import * as Plot from "@observablehq/plot";
import penguins from "../assets/penguins.json";
import { basePlotConfig, tooltipText } from "../utils/penguinPlotConfig";

const plotOptions = {
  ...basePlotConfig,
  marks: [
    Plot.ruleY([0]),
    Plot.dot(penguins, {
      x: "culmen_length_mm",
      y: "culmen_depth_mm",
      stroke: "species",
      title: tooltipText,
      tip: true,
    }),
  ],
};
---

<Layout>
  <main class="page">
    <div class="page__shell">
      <header class="page__intro">
        <h1>Explorer la biometrie des manchots</h1>
        <p>
          Selectionnez une espece, une ile et un sexe pour filtrer ce nuage de points
          observant les dimensions du bec (culmen) des manchots de Palmer Station.
        </p>
      </header>

      <section class="module module--controls" aria-label="Filtres du graphique">
        <div class="control-group">
          <div class="control">
            <label class="control__label" for="filter-species">Espece</label>
            <select id="filter-species" class="control__select" data-filter="species">
              <option value="all">Toutes</option>
              {speciesList.map((species) => (
                <option value={species}>{species}</option>
              ))}
            </select>
          </div>
          <div class="control">
            <label class="control__label" for="filter-island">Ile</label>
            <select id="filter-island" class="control__select" data-filter="island">
              <option value="all">Toutes</option>
              {islandList.map((island) => (
                <option value={island}>{island}</option>
              ))}
            </select>
          </div>
          <div class="control">
            <label class="control__label" for="filter-sex">Sexe</label>
            <select id="filter-sex" class="control__select" data-filter="sex">
              <option value="all">Tous</option>
              {sexList.map((sex) => (
                <option value={sex}>{sex}</option>
              ))}
            </select>
          </div>
          <button type="button" class="control__reset" id="filter-reset">
            Reinitialiser
          </button>
        </div>
        <p class="page__summary" id="filter-summary" aria-live="polite">
          {penguins.length} observations affichees.
        </p>
      </section>

      <section class="module module--chart">
        <PlotFigure
          figureId="penguin-scatter"
          title="Relations entre longueur et profondeur du culmen"
          subtitle="Chaque point correspond a un manchot, colore selon son espece."
          caption="Source : Palmer Penguins (Allison Horst, Gorman et al., 2014)."
          options={plotOptions}
        />
      </section>
    </div>
  </main>

  <script type="module" src={Astro.resolve("../scripts/penguin-plot.ts")}></script>

  <style>
    .page {
      min-height: 100vh;
      margin: 0;
      background: radial-gradient(circle at top left, #f5f7fb, #e1e6f0);
      color: #14213d;
      display: flex;
      justify-content: center;
      padding: clamp(2rem, 5vw, 4rem) clamp(1.5rem, 4vw, 3.5rem);
    }

    .page__shell {
      width: min(1080px, 100%);
      display: grid;
      gap: clamp(1.5rem, 3vw, 2.75rem);
    }

    .page__intro {
      display: grid;
      gap: 0.75rem;
      text-align: left;
    }

    .page__intro > h1 {
      font-size: clamp(1.5rem, 2.25vw, 2.75rem);
      margin: 0;
    }

    .page__intro > p {
      margin: 0;
      max-width: 60ch;
      color: rgba(0, 0, 0, 0.75);
    }

    .module {
      background: rgba(255, 255, 255, 0.92);
      border-radius: 1rem;
      padding: clamp(1.25rem, 3vw, 2rem);
      box-shadow: 0 18px 30px -25px rgba(20, 33, 61, 0.65);
      border: 1px solid rgba(20, 33, 61, 0.05);
    }

    .module--controls {
      display: grid;
      gap: 1.25rem;
    }

    .control-group {
      display: grid;
      gap: 1rem;
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      align-items: end;
    }

    .control {
      display: grid;
      gap: 0.5rem;
    }

    .control__label {
      font-weight: 600;
    }

    .control__select {
      min-width: 12ch;
      padding: 0.65rem 0.9rem;
      border: 1px solid rgba(20, 33, 61, 0.15);
      border-radius: 0.75rem;
      background: #f8fafc;
      font-size: 0.95rem;
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
    }

    .control__select:focus {
      border-color: #3a6ea5;
      outline: none;
      box-shadow: 0 0 0 3px rgba(58, 110, 165, 0.2);
    }

    .control__reset {
      align-self: stretch;
      padding: 0.75rem 1rem;
      background: #3a6ea5;
      color: #f8fafc;
      border: none;
      border-radius: 0.75rem;
      font-weight: 600;
      cursor: pointer;
      transition: transform 0.2s ease, box-shadow 0.2s ease, background 0.2s ease;
    }

    .control__reset:hover,
    .control__reset:focus-visible {
      background: #26486d;
      transform: translateY(-1px);
      box-shadow: 0 8px 20px -10px rgba(38, 72, 109, 0.75);
      outline: none;
    }

    .page__summary {
      margin: 0;
      font-size: 0.95rem;
      color: rgba(20, 33, 61, 0.75);
    }

    .module--chart {
      padding: clamp(1.25rem, 3vw, 2.5rem);
    }

    @media (max-width: 720px) {
      .page {
        padding: 1.5rem;
      }

      .control__reset {
        width: 100%;
      }
    }
  </style>
</Layout>

